// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using Microsoft.Data.SqlClient;
using Microsoft.EntityFrameworkCore;
using SaidalyTechBackEnd.DB_Models;
using System;
using System.Collections.Generic;
using System.Data;
using System.Threading;
using System.Threading.Tasks;

namespace SaidalyTechBackEnd.DB_Models
{
    public partial interface IPharmacyContextProcedures
    {
        Task<List<EmptyDataResult>> EmptyDataAsync(OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SPCustomerBalanceResult>> SPCustomerBalanceAsync(int? CustomerId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SPDelegatesReportBetweenDateResult>> SPDelegatesReportBetweenDateAsync(DateTime? DateFrom, DateTime? DateTo, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SPDelegatesReportBetweenShiftsResult>> SPDelegatesReportBetweenShiftsAsync(int? ShiftFrom, int? ShiftTo, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SPDelegatesReportWithIdResult>> SPDelegatesReportWithIdAsync(int? DelegateId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SPDelegatesReportWithIdBetweenDateResult>> SPDelegatesReportWithIdBetweenDateAsync(int? DelegateId, DateTime? DateFrom, DateTime? DateTo, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SpGetCustomerBalanceResult>> SpGetCustomerBalanceAsync(int? CustomerId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SPGetSaleItemBetweenShiftsResult>> SPGetSaleItemBetweenShiftsAsync(int? IdFrom, int? IdTo, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SPGetSaleItemInSheftBetweenDateResult>> SPGetSaleItemInSheftBetweenDateAsync(DateTime? DateFrom, DateTime? DateTo, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SPGetSaleItemInSheftBetweenDateAndUserIdResult>> SPGetSaleItemInSheftBetweenDateAndUserIdAsync(DateTime? DateFrom, DateTime? DateTo, string UserId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SPGetSaleItemInSheftByIdResult>> SPGetSaleItemInSheftByIdAsync(int? SheftId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SPGetSaleItemInSheftByUserIdResult>> SPGetSaleItemInSheftByUserIdAsync(int? SheftId, string UserId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SpGetSupplierBalanceResult>> SpGetSupplierBalanceAsync(int? SupplierId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
        Task<List<SpProfitAndLosesResult>> SpProfitAndLosesAsync(DateTime? dateFrom, DateTime? dateTo, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default);
    }
}
